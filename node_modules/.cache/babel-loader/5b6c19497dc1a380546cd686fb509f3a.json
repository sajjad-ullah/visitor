{"ast":null,"code":"import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function MapExample(){var mapRef=React.useRef(null);React.useEffect(function(){var google=window.google;var map=mapRef.current;var lat=\"40.748817\";var lng=\"-73.985428\";var myLatlng=new google.maps.LatLng(lat,lng);var mapOptions={zoom:12,center:myLatlng,scrollwheel:false,zoomControl:true,styles:[{featureType:\"administrative\",elementType:\"labels.text.fill\",stylers:[{color:\"#444444\"}]},{featureType:\"landscape\",elementType:\"all\",stylers:[{color:\"#f2f2f2\"}]},{featureType:\"poi\",elementType:\"all\",stylers:[{visibility:\"off\"}]},{featureType:\"road\",elementType:\"all\",stylers:[{saturation:-100},{lightness:45}]},{featureType:\"road.highway\",elementType:\"all\",stylers:[{visibility:\"simplified\"}]},{featureType:\"road.arterial\",elementType:\"labels.icon\",stylers:[{visibility:\"off\"}]},{featureType:\"transit\",elementType:\"all\",stylers:[{visibility:\"off\"}]},{featureType:\"water\",elementType:\"all\",stylers:[{color:\"#4299e1\"},{visibility:\"on\"}]}]};map=new google.maps.Map(map,mapOptions);var marker=new google.maps.Marker({position:myLatlng,map:map,animation:google.maps.Animation.DROP,title:\"Notus React!\"});var contentString='<div class=\"info-window-content\"><h2>Notus React</h2>'+\"<p>A free Admin for Tailwind CSS, React, and React Hooks.</p></div>\";var infowindow=new google.maps.InfoWindow({content:contentString});google.maps.event.addListener(marker,\"click\",function(){infowindow.open(map,marker);});});return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"relative w-full rounded h-600-px\",children:/*#__PURE__*/_jsx(\"div\",{className:\"rounded h-full\",ref:mapRef})})});}export default MapExample;","map":{"version":3,"sources":["/Users/sajjad/Desktop/visitor/src/components/Maps/MapExample.js"],"names":["React","MapExample","mapRef","useRef","useEffect","google","window","map","current","lat","lng","myLatlng","maps","LatLng","mapOptions","zoom","center","scrollwheel","zoomControl","styles","featureType","elementType","stylers","color","visibility","saturation","lightness","Map","marker","Marker","position","animation","Animation","DROP","title","contentString","infowindow","InfoWindow","content","event","addListener","open"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nfunction MapExample() {\n  const mapRef = React.useRef(null);\n  React.useEffect(() => {\n    let google = window.google;\n    let map = mapRef.current;\n    let lat = \"40.748817\";\n    let lng = \"-73.985428\";\n    const myLatlng = new google.maps.LatLng(lat, lng);\n    const mapOptions = {\n      zoom: 12,\n      center: myLatlng,\n      scrollwheel: false,\n      zoomControl: true,\n      styles: [\n        {\n          featureType: \"administrative\",\n          elementType: \"labels.text.fill\",\n          stylers: [{ color: \"#444444\" }],\n        },\n        {\n          featureType: \"landscape\",\n          elementType: \"all\",\n          stylers: [{ color: \"#f2f2f2\" }],\n        },\n        {\n          featureType: \"poi\",\n          elementType: \"all\",\n          stylers: [{ visibility: \"off\" }],\n        },\n        {\n          featureType: \"road\",\n          elementType: \"all\",\n          stylers: [{ saturation: -100 }, { lightness: 45 }],\n        },\n        {\n          featureType: \"road.highway\",\n          elementType: \"all\",\n          stylers: [{ visibility: \"simplified\" }],\n        },\n        {\n          featureType: \"road.arterial\",\n          elementType: \"labels.icon\",\n          stylers: [{ visibility: \"off\" }],\n        },\n        {\n          featureType: \"transit\",\n          elementType: \"all\",\n          stylers: [{ visibility: \"off\" }],\n        },\n        {\n          featureType: \"water\",\n          elementType: \"all\",\n          stylers: [{ color: \"#4299e1\" }, { visibility: \"on\" }],\n        },\n      ],\n    };\n\n    map = new google.maps.Map(map, mapOptions);\n\n    const marker = new google.maps.Marker({\n      position: myLatlng,\n      map: map,\n      animation: google.maps.Animation.DROP,\n      title: \"Notus React!\",\n    });\n\n    const contentString =\n      '<div class=\"info-window-content\"><h2>Notus React</h2>' +\n      \"<p>A free Admin for Tailwind CSS, React, and React Hooks.</p></div>\";\n\n    const infowindow = new google.maps.InfoWindow({\n      content: contentString,\n    });\n\n    google.maps.event.addListener(marker, \"click\", function () {\n      infowindow.open(map, marker);\n    });\n  });\n  return (\n    <>\n      <div className=\"relative w-full rounded h-600-px\">\n        <div className=\"rounded h-full\" ref={mapRef} />\n      </div>\n    </>\n  );\n}\n\nexport default MapExample;\n"]},"metadata":{},"sourceType":"module"}